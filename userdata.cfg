#cloud-config
hostname: apiki.apiki.loscaranlu.com.br
users:
  - default
timezone: America/Belem
package_update: true
package_upgrade: true
packages:
  - docker.io
  - docker-compose
  - vim
  - nginx
write_files:
  - content: |
    version: '3.1'

    services:

      wordpress:
        image: wordpress
        restart: always
        ports:
          - 8080:80
        environment:
          WORDPRESS_DB_HOST: db
          WORDPRESS_DB_USER: exampleuser
          WORDPRESS_DB_PASSWORD: examplepass
          WORDPRESS_DB_NAME: exampledb
        volumes:
          - wordpress:/var/www/html

      db:
        image: mysql:5.7
        restart: always
        environment:
          MYSQL_DATABASE: exampledb
          MYSQL_USER: exampleuser
          MYSQL_PASSWORD: examplepass
          MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
    - db:/var/lib/mysql

    volumes:
      wordpress:
      db:

  path: /root/wordpress/docker-compose.yaml
runcmd:
 - systemctl enable --now docker.service
 - docker-compose -f /root/wordpress/docker-compose.yaml up -d
 - cat << EOF > /etc/nginx/sites-available/default
   # websockets
   map $http_upgrade $connection_upgrade {
       default upgrade;
       '' close;
   }
   server {
       listen       80 default_server;
       listen       [::]:80 default_server;
       server_name  _;
       root         /usr/share/nginx/html;
       return 301 https://$host$request_uri;
       error_page 404 /404.html;
       location = /404.html {
       }

       error_page 500 502 503 504 /50x.html;
       location = /50x.html {
       }
   }

   server {
       listen       443 ssl http2 default_server;
       listen       [::]:443 ssl http2 default_server;
       server_name  apiki.loscaranlu.com.br;
       ssl_certificate /etc/letsencrypt/live/apiki.loscaranlu.com.br/fullchain.pem;
       ssl_certificate_key /etc/letsencrypt/live/apiki.loscaranlu.com.br/privkey.pem;

       root         /usr/share/nginx/html;
       location / {
           proxy_set_header Host $http_host;
           proxy_set_header X-Forwarded-Host $host;
           proxy_set_header X-Forwarded-Server $host;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "Upgrade";
           proxy_pass http://localhost:8080/;
       }

       error_page 404 /404.html;
           location = /40x.html {
       }

       error_page 500 502 503 504 /50x.html;
           location = /50x.html {
       }
   }
   EOF
