output "public_ip" {
  value = aws_instance.web.public_ip
}
output "public_dns" {
  value = aws_instance.web.public_dns
}
output "private_ip" {
  value = aws_instance.web.private_ip
}
output "rds_endpoint" {
  value = aws_db_instance.mysql_db.endpoint
}

# Export Terraform variable values to an Ansible var_file
resource "local_file" "tf_ansible_vars_file_new" {
  content = <<-DOC
    # Ansible vars_file containing variable values from Terraform.
    # Generated by Terraform mgmt configuration.

    WORDPRESS_DB_HOST: ${aws_db_instance.mysql_db.endpoint}
    WORDPRESS_DB_USER: ${var.username}
    WORDPRESS_DB_PASSWORD: ${var.password}
    WORDPRESS_DB_NAME: ${var.name}

    mgmt_net: ${var.public_subnet}

    user: ubuntu
    
    DOC
  filename = "../ansible/vars/tf_ansible_vars_file.yml"
}

# Export Terraform variable values to an Ansible hosts
resource "local_file" "ansible_hosts_file_new" {
  content = <<-DOC
    # Ansible hosts containing inventory values from Terraform.
    # Generated by Terraform mgmt configuration.

    [all:vars]
    ansible_user='ubuntu'
    ansible_become=yes
    ansible_ssh_private_key_file=~/.ssh/${aws_instance.web.key_name}.pem
    @REM ansible_ssh_private_key_file=~/.ssh/id_rsa
    host_key_checking=False
    ansible_ssh_extra_args = '-o StrictHostKeyChecking=no'
    ansible_python_interpreter=/usr/bin/python3

    [aws]
    ${aws_instance.web.public_ip}

    DOC
  filename = "../ansible/hosts"
}